import{_ as n}from"./prometheus-BrOwumHk.js";import{_ as s,o as t,c as a,e as o}from"./app-B8gNu4K5.js";const e="/images/dynamictp/jmx.png",p={},i=o('<h3 id="采集类型" tabindex="-1"><a class="header-anchor" href="#采集类型"><span>采集类型</span></a></h3><p>目前框架提供了五种监控数据采集方式，通过 collectorTypes 属性配置监控指标采集类型，默认 Micrometer</p><div class="hint-container tip"><p class="hint-container-title">采集类型</p><ul><li><p>Logging：线程池指标数据会以 Json 格式输出到指定的日志文件里</p></li><li><p>Internal_logging：线程池指标数据会以 Json 格式输出到项目日志文件里</p></li><li><p>Micrometer：采用监控门面，通过引入相关 Micrometer 依赖采集到相应的存储平台里（如 Prometheus，InfluxDb...）</p></li><li><p>Endpoint：暴露 Endpoint 端点，可以通过 http 方式实时获取指标数据</p></li><li><p>JMX：通过 JMX 方式采集指标数据，来监视线程池的性能指标</p></li></ul></div><h3 id="micrometer" tabindex="-1"><a class="header-anchor" href="#micrometer"><span>micrometer</span></a></h3><p>引入 prometheus（也可以用其他） 对应依赖，job 配置后 prometheus 管理台看到如下图所示，说明已经开始正常采集指标配置</p><figure><img src="'+n+`" alt="采集指标" tabindex="0" loading="lazy"><figcaption>采集指标</figcaption></figure><h3 id="logging" tabindex="-1"><a class="header-anchor" href="#logging"><span>logging</span></a></h3><p>指标数据以 json 日志格式输出磁盘，地址 \${logPath}/dynamictp/\${appName}.monitor.log</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">{</span><span class="token string">&quot;datetime&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2022-04-17 11:35:15.208&quot;</span>, <span class="token string">&quot;app_name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dynamic-tp-nacos-cloud-demo&quot;</span>, <span class="token string">&quot;thread_pool_metrics&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;activeCount&quot;</span>:0,<span class="token string">&quot;queueSize&quot;</span>:0,<span class="token string">&quot;largestPoolSize&quot;</span>:0,<span class="token string">&quot;poolSize&quot;</span>:0,<span class="token string">&quot;rejectHandlerName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CallerRunsPolicy&quot;</span>,<span class="token string">&quot;queueCapacity&quot;</span>:2000,<span class="token string">&quot;fair&quot;</span>:false,<span class="token string">&quot;queueTimeoutCount&quot;</span>:0,<span class="token string">&quot;rejectCount&quot;</span>:0,<span class="token string">&quot;waitTaskCount&quot;</span>:0,<span class="token string">&quot;taskCount&quot;</span>:0,<span class="token string">&quot;runTimeoutCount&quot;</span>:0,<span class="token string">&quot;queueRemainingCapacity&quot;</span>:2000,<span class="token string">&quot;corePoolSize&quot;</span>:4,<span class="token string">&quot;queueType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;VariableLinkedBlockingQueue&quot;</span>,<span class="token string">&quot;completedTaskCount&quot;</span>:0,<span class="token string">&quot;dynamic&quot;</span>:true,<span class="token string">&quot;maximumPoolSize&quot;</span>:6,<span class="token string">&quot;poolName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;dtpExecutor1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;datetime&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2022-04-17 11:35:15.209&quot;</span>, <span class="token string">&quot;app_name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dynamic-tp-nacos-cloud-demo&quot;</span>, <span class="token string">&quot;thread_pool_metrics&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;activeCount&quot;</span>:0,<span class="token string">&quot;queueSize&quot;</span>:0,<span class="token string">&quot;largestPoolSize&quot;</span>:0,<span class="token string">&quot;poolSize&quot;</span>:0,<span class="token string">&quot;rejectHandlerName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;CallerRunsPolicy&quot;</span>,<span class="token string">&quot;queueCapacity&quot;</span>:2000,<span class="token string">&quot;fair&quot;</span>:false,<span class="token string">&quot;queueTimeoutCount&quot;</span>:0,<span class="token string">&quot;rejectCount&quot;</span>:0,<span class="token string">&quot;waitTaskCount&quot;</span>:0,<span class="token string">&quot;taskCount&quot;</span>:0,<span class="token string">&quot;runTimeoutCount&quot;</span>:0,<span class="token string">&quot;queueRemainingCapacity&quot;</span>:2000,<span class="token string">&quot;corePoolSize&quot;</span>:2,<span class="token string">&quot;queueType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;TaskQueue&quot;</span>,<span class="token string">&quot;completedTaskCount&quot;</span>:0,<span class="token string">&quot;dynamic&quot;</span>:true,<span class="token string">&quot;maximumPoolSize&quot;</span>:4,<span class="token string">&quot;poolName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;dtpExecutor2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;datetime&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2022-04-17 11:35:15.209&quot;</span>, <span class="token string">&quot;app_name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dynamic-tp-nacos-cloud-demo&quot;</span>, <span class="token string">&quot;thread_pool_metrics&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;activeCount&quot;</span>:0,<span class="token string">&quot;queueSize&quot;</span>:0,<span class="token string">&quot;largestPoolSize&quot;</span>:0,<span class="token string">&quot;poolSize&quot;</span>:0,<span class="token string">&quot;queueCapacity&quot;</span>:2147483647,<span class="token string">&quot;fair&quot;</span>:false,<span class="token string">&quot;queueTimeoutCount&quot;</span>:0,<span class="token string">&quot;rejectCount&quot;</span>:0,<span class="token string">&quot;waitTaskCount&quot;</span>:0,<span class="token string">&quot;taskCount&quot;</span>:0,<span class="token string">&quot;runTimeoutCount&quot;</span>:0,<span class="token string">&quot;queueRemainingCapacity&quot;</span>:2147483647,<span class="token string">&quot;corePoolSize&quot;</span>:1,<span class="token string">&quot;queueType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;LinkedBlockingQueue&quot;</span>,<span class="token string">&quot;completedTaskCount&quot;</span>:0,<span class="token string">&quot;dynamic&quot;</span>:false,<span class="token string">&quot;maximumPoolSize&quot;</span>:1,<span class="token string">&quot;poolName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;commonExecutor&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;datetime&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2022-04-17 11:35:15.209&quot;</span>, <span class="token string">&quot;app_name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dynamic-tp-nacos-cloud-demo&quot;</span>, <span class="token string">&quot;thread_pool_metrics&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;activeCount&quot;</span>:0,<span class="token string">&quot;queueSize&quot;</span>:0,<span class="token string">&quot;largestPoolSize&quot;</span>:100,<span class="token string">&quot;poolSize&quot;</span>:100,<span class="token string">&quot;queueCapacity&quot;</span>:2147483647,<span class="token string">&quot;fair&quot;</span>:false,<span class="token string">&quot;queueTimeoutCount&quot;</span>:0,<span class="token string">&quot;rejectCount&quot;</span>:0,<span class="token string">&quot;waitTaskCount&quot;</span>:0,<span class="token string">&quot;taskCount&quot;</span>:177,<span class="token string">&quot;runTimeoutCount&quot;</span>:0,<span class="token string">&quot;queueRemainingCapacity&quot;</span>:2147483647,<span class="token string">&quot;corePoolSize&quot;</span>:100,<span class="token string">&quot;queueType&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;TaskQueue&quot;</span>,<span class="token string">&quot;completedTaskCount&quot;</span>:177,<span class="token string">&quot;dynamic&quot;</span>:false,<span class="token string">&quot;maximumPoolSize&quot;</span>:400,<span class="token string">&quot;poolName&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;tomcatWebServerTp&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="endpoint" tabindex="-1"><a class="header-anchor" href="#endpoint"><span>endpoint</span></a></h3><p>暴露端点(dynamic-tp)，可以通过 http 方式实时请求</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;pool_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;remoting-call&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;core_pool_size&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token property">&quot;maximum_pool_size&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
        <span class="token property">&quot;queue_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SynchronousQueue&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;queue_capacity&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;queue_size&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fair&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;queue_remaining_capacity&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;active_count&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;task_count&quot;</span><span class="token operator">:</span> <span class="token number">21760</span><span class="token punctuation">,</span>
        <span class="token property">&quot;completed_task_count&quot;</span><span class="token operator">:</span> <span class="token number">21760</span><span class="token punctuation">,</span>
        <span class="token property">&quot;largest_pool_size&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
        <span class="token property">&quot;pool_size&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token property">&quot;wait_task_count&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reject_count&quot;</span><span class="token operator">:</span> <span class="token number">124662</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reject_handler_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CallerRunsPolicy&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jmx" tabindex="-1"><a class="header-anchor" href="#jmx"><span>JMX</span></a></h3><p>通过 JMX 监控管理MXBean</p><figure><img src="`+e+'" alt="采集指标" tabindex="0" loading="lazy"><figcaption>采集指标</figcaption></figure>',15),u=[i];function l(c,r){return t(),a("div",null,u)}const k=s(p,[["render",l],["__file","collect_types.html.vue"]]),g=JSON.parse('{"path":"/guide/monitor/collect_types.html","title":"采集类型","lang":"zh-CN","frontmatter":{"title":"采集类型","icon":"shujucaiji","order":1,"author":"yanhom","date":"2022-06-11T00:00:00.000Z","tag":["采集类型","dynamictp"],"sticky":true,"star":true,"description":"采集类型 目前框架提供了五种监控数据采集方式，通过 collectorTypes 属性配置监控指标采集类型，默认 Micrometer 采集类型 Logging：线程池指标数据会以 Json 格式输出到指定的日志文件里 Internal_logging：线程池指标数据会以 Json 格式输出到项目日志文件里 Micrometer：采用监控门面，通过引入...","head":[["meta",{"property":"og:url","content":"https://gitee.com/dromara/dynamic-tp/guide/monitor/collect_types.html"}],["meta",{"property":"og:site_name","content":"dynamictp"}],["meta",{"property":"og:title","content":"采集类型"}],["meta",{"property":"og:description","content":"采集类型 目前框架提供了五种监控数据采集方式，通过 collectorTypes 属性配置监控指标采集类型，默认 Micrometer 采集类型 Logging：线程池指标数据会以 Json 格式输出到指定的日志文件里 Internal_logging：线程池指标数据会以 Json 格式输出到项目日志文件里 Micrometer：采用监控门面，通过引入..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/dromara/dynamic-tp/images/dynamictp/prometheus.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-15T15:33:45.000Z"}],["meta",{"property":"article:author","content":"yanhom"}],["meta",{"property":"article:tag","content":"采集类型"}],["meta",{"property":"article:tag","content":"dynamictp"}],["meta",{"property":"article:published_time","content":"2022-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-15T15:33:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"采集类型\\",\\"image\\":[\\"https://gitee.com/dromara/dynamic-tp/images/dynamictp/prometheus.png\\",\\"https://gitee.com/dromara/dynamic-tp/images/dynamictp/jmx.png\\"],\\"datePublished\\":\\"2022-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-15T15:33:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yanhom\\"}]}"]]},"headers":[{"level":3,"title":"采集类型","slug":"采集类型","link":"#采集类型","children":[]},{"level":3,"title":"micrometer","slug":"micrometer","link":"#micrometer","children":[]},{"level":3,"title":"logging","slug":"logging","link":"#logging","children":[]},{"level":3,"title":"endpoint","slug":"endpoint","link":"#endpoint","children":[]},{"level":3,"title":"JMX","slug":"jmx","link":"#jmx","children":[]}],"git":{"createdTime":1677600698000,"updatedTime":1742052825000,"contributors":[{"name":"yanhom","email":"yanhom1314@foxmail.com","commits":10},{"name":"kamtohung","email":"kamtohung@gmail.com","commits":2}]},"readingTime":{"minutes":1.77,"words":530},"filePathRelative":"guide/monitor/collect_types.md","localizedDate":"2022年6月11日","autoDesc":true,"excerpt":"<h3>采集类型</h3>\\n<p>目前框架提供了五种监控数据采集方式，通过 collectorTypes 属性配置监控指标采集类型，默认 Micrometer</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">采集类型</p>\\n<ul>\\n<li>\\n<p>Logging：线程池指标数据会以 Json 格式输出到指定的日志文件里</p>\\n</li>\\n<li>\\n<p>Internal_logging：线程池指标数据会以 Json 格式输出到项目日志文件里</p>\\n</li>\\n<li>\\n<p>Micrometer：采用监控门面，通过引入相关 Micrometer 依赖采集到相应的存储平台里（如 Prometheus，InfluxDb...）</p>\\n</li>\\n<li>\\n<p>Endpoint：暴露 Endpoint 端点，可以通过 http 方式实时获取指标数据</p>\\n</li>\\n<li>\\n<p>JMX：通过 JMX 方式采集指标数据，来监视线程池的性能指标</p>\\n</li>\\n</ul>\\n</div>"}');export{k as comp,g as data};
