import{_ as n,o as s,c as a,e}from"./app-B8gNu4K5.js";const t={},p=e(`<p>如果你没使用上述任何一种配置中心，有内部自研的配置中心，接入也很简单，只需要自定义一个 Refresher 即可，创建继承自 AbstractRefresher 的 GalaxyRefresher 类，实现监听特定的配置刷新事件，下面是一个简单的示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GalaxyRefresher</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractRefresher</span> <span class="token keyword">implements</span> <span class="token class-name">SmartApplicationListener</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">GalaxyRefresher</span><span class="token punctuation">(</span><span class="token class-name">DtpProperties</span> dtpProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>dtpProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsEventType</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationEvent</span><span class="token punctuation">&gt;</span></span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">GalaxyConfigEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">GalaxyConfigEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">refresh</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractRefresher 提供了三种 refresh 方法，自选用任意一种调用即可实现动态刷新功能：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">ConfigFileTypeEnum</span> fileType<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>线程池配置文件格式和上述其他配置中心一致，直接参考就行。</p>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","custom.html.vue"]]),k=JSON.parse('{"path":"/guide/configcenter/custom.html","title":"自研配置中心接入","lang":"zh-CN","frontmatter":{"title":"自研配置中心接入","icon":"customize","order":1,"author":"yanhom","date":"2022-06-11T00:00:00.000Z","tag":["自研配置中心接入","dynamictp"],"sticky":true,"star":true,"description":"如果你没使用上述任何一种配置中心，有内部自研的配置中心，接入也很简单，只需要自定义一个 Refresher 即可，创建继承自 AbstractRefresher 的 GalaxyRefresher 类，实现监听特定的配置刷新事件，下面是一个简单的示例： AbstractRefresher 提供了三种 refresh 方法，自选用任意一种调用即可实现动态...","head":[["meta",{"property":"og:url","content":"https://gitee.com/dromara/dynamic-tp/guide/configcenter/custom.html"}],["meta",{"property":"og:site_name","content":"dynamictp"}],["meta",{"property":"og:title","content":"自研配置中心接入"}],["meta",{"property":"og:description","content":"如果你没使用上述任何一种配置中心，有内部自研的配置中心，接入也很简单，只需要自定义一个 Refresher 即可，创建继承自 AbstractRefresher 的 GalaxyRefresher 类，实现监听特定的配置刷新事件，下面是一个简单的示例： AbstractRefresher 提供了三种 refresh 方法，自选用任意一种调用即可实现动态..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-24T15:36:48.000Z"}],["meta",{"property":"article:author","content":"yanhom"}],["meta",{"property":"article:tag","content":"自研配置中心接入"}],["meta",{"property":"article:tag","content":"dynamictp"}],["meta",{"property":"article:published_time","content":"2022-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-24T15:36:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自研配置中心接入\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-24T15:36:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yanhom\\"}]}"]]},"headers":[],"git":{"createdTime":1711185693000,"updatedTime":1711294608000,"contributors":[{"name":"yanhom","email":"yanhom1314@foxmail.com","commits":3}]},"readingTime":{"minutes":0.73,"words":219},"filePathRelative":"guide/configcenter/custom.md","localizedDate":"2022年6月11日","autoDesc":true,"excerpt":"<p>如果你没使用上述任何一种配置中心，有内部自研的配置中心，接入也很简单，只需要自定义一个 Refresher 即可，创建继承自 AbstractRefresher 的 GalaxyRefresher 类，实现监听特定的配置刷新事件，下面是一个简单的示例：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">GalaxyRefresher</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">AbstractRefresher</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">SmartApplicationListener</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">GalaxyRefresher</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">DtpProperties</span> dtpProperties<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">(</span>dtpProperties<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">supportsEventType</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Class</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">ApplicationEvent</span><span class=\\"token punctuation\\">&gt;</span></span> eventType<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">GalaxyConfigEvent</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isAssignableFrom</span><span class=\\"token punctuation\\">(</span>eventType<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onApplicationEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ApplicationEvent</span> event<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>event <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">GalaxyConfigEvent</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">refresh</span><span class=\\"token punctuation\\">(</span>environment<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}');export{u as comp,k as data};
