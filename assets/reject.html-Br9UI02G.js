import{_ as n,o as a,c as s,e as t}from"./app-B8gNu4K5.js";const e={},p=t(`<h3 id="自定义拒绝策略" tabindex="-1"><a class="header-anchor" href="#自定义拒绝策略"><span>自定义拒绝策略</span></a></h3><ol><li>实现 RejectedExecutionHandler 接口，或继承相关子类</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AbortPolicyWithReport</span> <span class="token keyword">extends</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> threadName<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AbortPolicyWithReport</span><span class="token punctuation">(</span><span class="token class-name">String</span> threadName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>threadName <span class="token operator">=</span> threadName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Thread pool is EXHAUSTED!&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; Thread Name: %s, Pool Size: %d (active: %d, core: %d, max: %d, largest: %d), Task: %d (completed: %d),&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; Executor status:(isShutdown:%s, isTerminated:%s, isTerminating:%s)!&quot;</span><span class="token punctuation">,</span>
                threadName<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getPoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getActiveCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getCorePoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMaximumPoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                e<span class="token punctuation">.</span><span class="token function">getLargestPoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getCompletedTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                e<span class="token punctuation">.</span><span class="token function">isTerminating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionException</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>SPI 配置</li></ol><p>resources/META-INF/services 下配置 java spi 实现</p><p>文件名：java.util.concurrent.RejectedExecutionHandler</p><p>文件值：org.dromara.dynamictp.core.reject.AbortPolicyWithReport</p>`,7),o=[p];function c(i,u){return a(),s("div",null,o)}const r=n(e,[["render",c],["__file","reject.html.vue"]]),k=JSON.parse('{"path":"/guide/use/reject.html","title":"拒绝策略","lang":"zh-CN","frontmatter":{"title":"拒绝策略","icon":"reject","order":1,"author":"yanhom","date":"2025-03-02T00:00:00.000Z","tag":["拒绝策略","dynamictp"],"sticky":true,"star":true,"description":"自定义拒绝策略 实现 RejectedExecutionHandler 接口，或继承相关子类 SPI 配置 resources/META-INF/services 下配置 java spi 实现 文件名：java.util.concurrent.RejectedExecutionHandler 文件值：org.dromara.dynamictp.cor...","head":[["meta",{"property":"og:url","content":"https://gitee.com/dromara/dynamic-tp/guide/use/reject.html"}],["meta",{"property":"og:site_name","content":"dynamictp"}],["meta",{"property":"og:title","content":"拒绝策略"}],["meta",{"property":"og:description","content":"自定义拒绝策略 实现 RejectedExecutionHandler 接口，或继承相关子类 SPI 配置 resources/META-INF/services 下配置 java spi 实现 文件名：java.util.concurrent.RejectedExecutionHandler 文件值：org.dromara.dynamictp.cor..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-15T15:33:45.000Z"}],["meta",{"property":"article:author","content":"yanhom"}],["meta",{"property":"article:tag","content":"拒绝策略"}],["meta",{"property":"article:tag","content":"dynamictp"}],["meta",{"property":"article:published_time","content":"2025-03-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-15T15:33:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"拒绝策略\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-15T15:33:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yanhom\\"}]}"]]},"headers":[{"level":3,"title":"自定义拒绝策略","slug":"自定义拒绝策略","link":"#自定义拒绝策略","children":[]}],"git":{"createdTime":1740924492000,"updatedTime":1742052825000,"contributors":[{"name":"yanhom","email":"yanhom1314@foxmail.com","commits":2}]},"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"guide/use/reject.md","localizedDate":"2025年3月2日","autoDesc":true,"excerpt":"<h3>自定义拒绝策略</h3>\\n<ol>\\n<li>实现 RejectedExecutionHandler 接口，或继承相关子类</li>\\n</ol>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Slf4j</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AbortPolicyWithReport</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">ThreadPoolExecutor<span class=\\"token punctuation\\">.</span>AbortPolicy</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> threadName<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">AbortPolicyWithReport</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> threadName<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>threadName <span class=\\"token operator\\">=</span> threadName<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">rejectedExecution</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Runnable</span> r<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ThreadPoolExecutor</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">String</span> msg <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token string\\">\\"Thread pool is EXHAUSTED!\\"</span>\\n                        <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\" Thread Name: %s, Pool Size: %d (active: %d, core: %d, max: %d, largest: %d), Task: %d (completed: %d),\\"</span>\\n                        <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\" Executor status:(isShutdown:%s, isTerminated:%s, isTerminating:%s)!\\"</span><span class=\\"token punctuation\\">,</span>\\n                threadName<span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPoolSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getActiveCount</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCorePoolSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getMaximumPoolSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getLargestPoolSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTaskCount</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getCompletedTaskCount</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isShutdown</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isTerminated</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isTerminating</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">warn</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">RejectedExecutionException</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}');export{r as comp,k as data};
