import{mathjax as p}from"mathjax-full/js/mathjax.js";import{mathjax as V}from"mathjax-full/js/mathjax.js";import{TeX as c}from"mathjax-full/js/input/tex.js";import{TeX as b}from"mathjax-full/js/input/tex.js";import{CHTML as s}from"mathjax-full/js/output/chtml.js";import{CHTML as D}from"mathjax-full/js/output/chtml.js";import{SVG as f}from"mathjax-full/js/output/svg.js";import{SVG as U}from"mathjax-full/js/output/svg.js";import{createRequire as l}from"node:module";import{tex as x}from"@mdit/plugin-tex";import{AssistiveMmlHandler as h}from"mathjax-full/js/a11y/assistive-mml.js";import{liteAdaptor as d}from"mathjax-full/js/adaptors/liteAdaptor.js";import{RegisterHTMLHandler as M}from"mathjax-full/js/handlers/html.js";import{AllPackages as j}from"mathjax-full/js/input/tex/AllPackages.js";import v from"upath";const i=t=>({InputJax:new c({packages:j,...t.tex}),OutputJax:t.output==="chtml"?new s({fontURL:v.dirname(l(import.meta.url).resolve("mathjax-full/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff")),adaptiveCSS:!0,...t.chtml}):new f({fontCache:"none",...t.svg}),enableAssistiveMml:t.a11y!==!1}),H=(t={})=>{const e=i(t),o=d(),m=M(o);t.a11y!==!1&&h(m);const{OutputJax:r,InputJax:n}=e,a=()=>{r instanceof s&&r.clearCache()};return{adaptor:o,documentOptions:e,clearStyle:a,reset:()=>{n.reset()},outputStyle:()=>{const u=o.innerHTML(e.OutputJax.styleSheet(p.document("",e)));return a(),u}}},L=(t,e)=>{const{adaptor:o,documentOptions:m}=e;t.use(x,{render:(r,n)=>{const a=p.document(r,m).convert(r,{display:n});return o.outerHTML(a)}})};export{D as CHTML,V as Mathjax,U as SVG,b as TeX,H as createMathjaxInstance,i as getDocumentOptions,L as mathjax};
//# sourceMappingURL=index.mjs.map
