{"version":3,"file":"SWUpdatePopup.js","sources":["../../../src/client/composables/useSkipWaiting.ts","../../../src/client/components/SWUpdatePopup.ts"],"sourcesContent":["/**\n * Call `skipWaiting()` inside current waiting worker\n */\nexport const useSkipWaiting = (\n  registration: ServiceWorkerRegistration\n): void => {\n  // get the waiting worker\n  const worker = registration.waiting;\n\n  // if there is no waiting worker, return directly\n  if (!worker) return;\n\n  // post SKIP_WAITING message to the waiting worker\n  const channel = new MessageChannel();\n\n  worker.postMessage({ type: \"SKIP_WAITING\" }, [channel.port2]);\n};\n","import {\n  Transition,\n  type VNode,\n  computed,\n  defineComponent,\n  h,\n  onMounted,\n  ref,\n} from \"vue\";\nimport { useLocaleConfig } from \"vuepress-shared/client\";\n\nimport { UpdateIcon } from \"../components/icons.js\";\nimport { usePWAEvent, useSkipWaiting } from \"../composables/index.js\";\nimport { locales } from \"../define.js\";\n\nimport \"../styles/popup.scss\";\n\nexport default defineComponent({\n  name: \"SWUpdatePopup\",\n\n  setup(_props, { slots }) {\n    const locale = useLocaleConfig(locales);\n    const registration = ref<ServiceWorkerRegistration>();\n\n    const enabled = computed(() => Boolean(registration.value));\n\n    const reload = (): void => {\n      if (registration.value) {\n        useSkipWaiting(registration.value);\n        registration.value = undefined;\n      }\n    };\n\n    onMounted(() => {\n      const event = usePWAEvent();\n\n      event.on(\"updated\", (reg) => {\n        if (reg) registration.value = reg;\n      });\n    });\n\n    return (): VNode =>\n      h(\n        Transition,\n        { name: \"popup\" },\n        () =>\n          slots[\"default\"]?.({\n            enabled: enabled.value,\n            reload,\n          }) ||\n          (enabled.value\n            ? h(\n                \"button\",\n                {\n                  class: \"sw-update-popup\",\n                  tabindex: 0,\n                  onClick: () => reload(),\n                },\n                [\n                  locale.value.update,\n                  h(\"span\", { class: \"icon-wrapper\" }, h(UpdateIcon)),\n                ]\n              )\n            : null)\n      );\n  },\n});\n"],"names":["useSkipWaiting","registration","worker","channel","defineComponent","_props","slots","locale","useLocaleConfig","locales","ref","enabled","computed","reload","onMounted","usePWAEvent","reg","h","Transition","_a","UpdateIcon"],"mappings":"yRAGa,MAAAA,EACXC,GACS,CAET,MAAMC,EAASD,EAAa,QAG5B,GAAI,CAACC,EAAQ,OAGb,MAAMC,EAAU,IAAI,eAEpBD,EAAO,YAAY,CAAE,KAAM,cAAe,EAAG,CAACC,EAAQ,KAAK,CAAC,CAC9D,ECCA,IAAeC,EAAAA,EAAgB,CAC7B,KAAM,gBAEN,MAAMC,EAAQ,CAAE,MAAAC,CAAM,EAAG,CACvB,MAAMC,EAASC,EAAgBC,CAAO,EAChCR,EAAeS,IAEfC,EAAUC,EAAS,IAAM,CAAA,CAAQX,EAAa,KAAM,EAEpDY,EAAS,IAAY,CACrBZ,EAAa,QACfD,EAAeC,EAAa,KAAK,EACjCA,EAAa,MAAQ,OAEzB,EAEA,OAAAa,EAAU,IAAM,CACAC,IAER,GAAG,UAAYC,GAAQ,CACvBA,IAAKf,EAAa,MAAQe,EAChC,CAAC,CACH,CAAC,EAEM,IACLC,EACEC,EACA,CAAE,KAAM,OAAQ,EAChB,IAAG,CA7CX,IAAAC,EA8CU,QAAAA,EAAAb,EAAM,UAAN,KAAAa,OAAAA,EAAA,KAAAb,EAAmB,CACjB,QAASK,EAAQ,MACjB,OAAAE,CACF,CAAA,KACCF,EAAQ,MACLM,EACE,SACA,CACE,MAAO,kBACP,SAAU,EACV,QAAS,IAAMJ,GACjB,EACA,CACEN,EAAO,MAAM,OACbU,EAAE,OAAQ,CAAE,MAAO,cAAe,EAAGA,EAAEG,CAAU,CAAC,CACpD,CACF,EACA,KACR,CAAA,CACJ,CACF,CAAC"}