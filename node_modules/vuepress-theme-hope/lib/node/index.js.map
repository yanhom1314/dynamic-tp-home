{"version":3,"file":"index.js","sources":["../../src/node/alias.ts","../../src/node/compact/helper-v2.ts","../../src/node/compact/helper-v1.ts","../../src/node/prepare/config/config.ts","../../src/node/theme.ts"],"sourcesContent":["import { fs, path } from \"@vuepress/utils\";\nimport { endsWith, fromEntries } from \"vuepress-shared/node\";\n\nimport { CLIENT_FOLDER } from \"./utils.js\";\n\nconst getDirAlias = (dir: string): [string, string][] =>\n  fs\n    .readdirSync(path.resolve(CLIENT_FOLDER, dir))\n    .filter(\n      (file) =>\n        // js files\n        endsWith(file, \".js\") ||\n        // folder\n        !file.includes(\".\")\n    )\n    .map<[string, string]>((file) => [\n      `@theme-hope/${dir}/${file.replace(/\\.js$/, \"\")}`,\n      path.resolve(CLIENT_FOLDER, dir, file),\n    ]);\n\nconst getEntryAlias = (entry: string): [string, string] | null =>\n  fs.existsSync(path.resolve(CLIENT_FOLDER, entry, \"index.js\"))\n    ? [\n        `@theme-hope/${entry}/index`,\n        path.resolve(CLIENT_FOLDER, entry, \"index.js\"),\n      ]\n    : null;\n\n/**\n * @private\n */\nexport const getAlias = (isDebug: boolean): Record<string, string> => {\n  // use alias to make all components replaceable\n  const alias = fromEntries([\n    // define components\n    ...getDirAlias(\"components\"),\n    // define composables and utils\n    ...[\"composables\", \"utils\"]\n      .map(getEntryAlias)\n      .filter<[string, string]>(\n        (item): item is [string, string] => item !== null\n      ),\n    // define modules\n    ...fs\n      .readdirSync(path.resolve(CLIENT_FOLDER, \"modules\"))\n      .map((folder) => `modules/${folder}`)\n      .map((file) => [\n        // define module components\n        ...getDirAlias(`${file}/components`),\n        // define module composables and utils\n        ...[\"composables\", \"utils\"]\n          .map((folder) => `${file}/${folder}`)\n          .map(getEntryAlias)\n          .filter<[string, string]>(\n            (item): item is [string, string] => item !== null\n          ),\n      ])\n      .flat(),\n  ]);\n\n  if (isDebug) console.log(\"Theme alias config:\", alias);\n\n  return alias;\n};\n","import { type UserConfig } from \"@vuepress/cli\";\nimport { isFunction, isPlainObject } from \"@vuepress/shared\";\nimport { colors } from \"@vuepress/utils\";\n\nimport { convertThemeOptions } from \"./theme.js\";\nimport { deprecatedMsg } from \"./utils.js\";\nimport {\n  type NavbarOptions,\n  type SidebarArrayOptions,\n  type SidebarObjectOptions,\n  type SidebarOptions,\n  type ThemeOptions,\n} from \"../../shared/index.js\";\nimport { hopeTheme } from \"../theme.js\";\nimport { logger } from \"../utils.js\";\n\n/**\n * @deprecated use `import { navbar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineNavbarConfig = (config: NavbarOptions): NavbarOptions => {\n  deprecatedMsg(\n    \"defineNavbarConfig\",\n    'import { navbar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { sidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarConfig = (config: SidebarOptions): SidebarOptions => {\n  deprecatedMsg(\n    \"defineSidebarConfig\",\n    'import { sidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { arraySidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarArrayConfig = (\n  config: SidebarArrayOptions\n): SidebarArrayOptions => {\n  deprecatedMsg(\n    \"defineSidebarArrayConfig\",\n    'import { arraySidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { objectSidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const defineSidebarObjectConfig = (\n  config: SidebarObjectOptions\n): SidebarObjectOptions => {\n  deprecatedMsg(\n    \"defineSidebarObjectConfig\",\n    'import { objectSidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { hopeThemeLegacy } from \"vuepress-theme-hope\";` instead\n */\nexport const defineThemeConfig = (themeConfig: ThemeOptions): ThemeOptions => {\n  deprecatedMsg(\n    \"defineThemeConfig\",\n    'import { hopeThemeLegacy } from \"vuepress-theme-hope\";'\n  );\n\n  return convertThemeOptions(\n    themeConfig as ThemeOptions & Record<string, unknown>\n  );\n};\n\n/**\n * @deprecated import and use `hopeTheme` instead\n */\nexport const defineHopeConfig = (\n  config: UserConfig & Record<string, unknown>\n): UserConfig => {\n  logger.warn(\n    `\\\n\"${colors.magenta(\"defineHopeConfig\")}\" is ${colors.red(\n      \"deprecated\"\n    )}, please use the following code instead:\n\n${colors.magenta(`\\\nimport { defineUserConfig } from \"vuepress\";\nimport { hopeThemeLegacy } from \"vuepress-theme-hope\";\n\nexport default {\n  // site config\n  // ...\n\n  theme : hopeThemeLegacy({\n    // theme config\n    // ...\n  }),\n};\n`)}\n`\n  );\n\n  // check themeConfig\n  if (\"themeConfig\" in config && isPlainObject(config[\"themeConfig\"]))\n    config.theme = hopeTheme(config[\"themeConfig\"] as ThemeOptions);\n\n  // check theme\n  if (!isFunction(config.theme)) config.theme = hopeTheme({});\n\n  return config;\n};\n","import { type UserConfig } from \"@vuepress/cli\";\nimport { type Plugin, type PluginConfig } from \"@vuepress/core\";\nimport { type MarkdownOptions } from \"@vuepress/markdown\";\nimport { isArray, isFunction, isPlainObject, isString } from \"@vuepress/shared\";\nimport { colors } from \"@vuepress/utils\";\n\nimport { defineHopeConfig } from \"./helper-v2.js\";\nimport { convertThemeOptions } from \"./theme.js\";\nimport { deprecatedMsg } from \"./utils.js\";\nimport {\n  type NavbarOptions,\n  type SidebarOptions,\n  type ThemeOptions,\n} from \"../../shared/index.js\";\nimport { logger } from \"../utils.js\";\n\n/**\n * @deprecated use `import { navbar } from \"vuepress-theme-hope\";` instead\n */\nexport const navbarConfig = (config: NavbarOptions): NavbarOptions => {\n  deprecatedMsg(\n    \"navbarConfig\",\n    'import { navbar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { arraySidebar } from \"vuepress-theme-hope\";` instead\n */\nexport const sidebarConfig = (config: SidebarOptions): SidebarOptions => {\n  deprecatedMsg(\n    \"sidebarConfig\",\n    'import { sidebar } from \"vuepress-theme-hope\";'\n  );\n\n  return config;\n};\n\n/**\n * @deprecated use `import { hopeThemeLegacy } from \"vuepress-theme-hope\";` instead\n */\nexport const themeConfig = (themeConfig: ThemeOptions): ThemeOptions => {\n  deprecatedMsg(\n    \"themeConfig\",\n    'import { hopeThemeLegacy } from \"vuepress-theme-hope\";'\n  );\n\n  return convertThemeOptions(\n    themeConfig as ThemeOptions & Record<string, unknown>\n  );\n};\n\nconst checkMarkdownOptions = (\n  options: MarkdownOptions & Record<string, unknown> = {}\n): void => {\n  // lineNumbers\n  if (\"lineNumbers\" in options) {\n    logger.warn(\n      `${colors.magenta(\"markdown.lineNumbers\")} is ${colors.yellow(\n        \"deprecated\"\n      )}  in VuePress2, please use ${colors.magenta(\n        \"markdown.code.lineNumbers\"\n      )} instead.`\n    );\n\n    options.code = options.code ?? {};\n\n    if (isPlainObject(options.code))\n      options.code.lineNumbers = options[\"lineNumbers\"] as boolean;\n\n    delete options[\"lineNumbers\"];\n  }\n\n  // slugify\n  if (\"slugify\" in options) {\n    logger.error(\n      `\\\n${colors.magenta(\"markdown.slugify\")} is ${colors.red(\n        \"no longer supported\"\n      )} in VuePress2.\nIf you want to change the slugify function anyway, set the following options separately:\n· ${colors.blue(\"markdown.anchor.slugify\")}\n· ${colors.blue(\"markdown.toc.slugify\")}\n· ${colors.blue(\"markdown.extractHeaders.slugify\")}\n`\n    );\n\n    delete options[\"slugify\"];\n  }\n\n  // pageSuffix\n  if (\"pageSuffix\" in options) {\n    logger.error(\n      `${colors.magenta(\"markdown.pageSuffix\")} is ${colors.red(\n        \"no longer supported\"\n      )} in VuePress2.`\n    );\n\n    delete options[\"pageSuffix\"];\n  }\n\n  // externalLinks\n  if (\"externalLinks\" in options) {\n    logger.error(\n      `${colors.magenta(\"markdown.externalLinks\")} is ${colors.red(\n        \"no longer supported\"\n      )} in VuePress2, please use ${colors.magenta(\n        \"markdown.links.externalAttrs\"\n      )} instead.`\n    );\n\n    delete options[\"externalLinks\"];\n  }\n\n  // plugins\n  if (\"plugins\" in options) {\n    logger.error(\n      `${colors.magenta(\"markdown.plugins\")} is ${colors.red(\n        \"no longer supported\"\n      )} in VuePress2, please use ${colors.magenta(\n        \"extendsMarkdown\"\n      )} hook instead.`\n    );\n\n    delete options[\"plugins\"];\n  }\n};\n\nconst checkPluginOptions = (plugins: unknown): PluginConfig => {\n  // check plugin array\n  if (isArray(plugins))\n    return plugins.flat().filter((item): item is Plugin => {\n      if (isFunction(item)) return true;\n\n      if (isPlainObject(item)) {\n        const { name } = item as Plugin & Record<string, unknown>;\n\n        // check name\n        if (!isString(name)) {\n          logger.error(\n            'VuePress2 requires \"name\" option in plugins and it should strict equal it\\'s package name.'\n          );\n\n          return false;\n        }\n\n        // check name\n        if (!/^(@.*\\/)?vuepress-plugin-/.test(name)) {\n          logger.error(\n            \"VuePress2 requires plugin name to strict equal a package name, you should fix it\"\n          );\n\n          return false;\n        }\n\n        // check renamed options\n        [\n          // v1\n          [\"ready\", \"onPrepared\"],\n          [\"updated\", \"onWatched\"],\n          [\"generated\", \"onGenerated\"],\n          [\"extendMarkdown\", \"extendsMarkdown\"],\n          [\"extendPageData\", \"extendsPage\"],\n\n          // v2\n          [\"templateSSR\", \"templateBuild\"],\n        ].forEach(([deprecatedOption, newOption]) => {\n          if (deprecatedOption in item)\n            logger.warn(\n              `${colors.magenta(\n                deprecatedOption\n              )} options in plugin options is ${colors.yellow(\n                \"deprecated\"\n              )} in VuePress2, please use ${colors.magenta(newOption)} instead.`\n            );\n\n          // eslint-disable-next-line\n          item[newOption] = item[deprecatedOption];\n\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          delete item[deprecatedOption];\n        });\n\n        // check removed options\n        [\n          // v1\n          \"plugins\",\n          \"chainMarkdown\",\n          \"extendsCli\",\n          \"configureWebpack\",\n          \"chainWebpack\",\n          \"beforeDevServer\",\n          \"afterDevServer\",\n          \"additionalPages\",\n          \"clientDynamicModules\",\n          \"enhanceAppFiles\",\n          \"globalUIComponents\",\n          \"clientRootMixin\",\n\n          // v2\n          \"clientAppEnhanceFiles\",\n          \"clientAppRootComponentFiles\",\n          \"clientAppSetupFiles\",\n        ].forEach((removedOption) => {\n          if (removedOption in item)\n            logger.error(\n              `${colors.magenta(\n                removedOption\n              )} option in plugin options is ${colors.red(\n                \"no longer supported\"\n              )} in VuePress2, make sure you are using a VuePress2 plugin.`\n            );\n\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          delete item[removedOption];\n        });\n      }\n\n      return false;\n    });\n\n  // check whether plugins is an object\n  if (isPlainObject(plugins)) {\n    logger.error(\n      `${colors.magenta('object format \"plugins\"')} is ${colors.red(\n        \"no longer supported\"\n      )} in VuePress2, you should import plugins and call them in an array.`\n    );\n\n    return [];\n  }\n\n  return [];\n};\n\nconst checkBundlerOptions = (config: Record<string, unknown>): void => {\n  [\n    \"postcss\",\n    \"stylus\",\n    \"scss\",\n    \"sass\",\n    \"less\",\n    \"chainWebpack\",\n    \"configureWebpack\",\n    \"beforeDevServer\",\n    \"afterDevServer\",\n    \"evergreen\",\n  ].forEach((removedOption) => {\n    if (removedOption in config)\n      logger.error(\n        `\"${colors.magenta(\n          removedOption\n        )}\" option in config file is ${colors.red(\n          \"no longer supported\"\n        )} in VuePress2, you should set it in bundler options.`\n      );\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    delete config[removedOption];\n  });\n};\n\n/**\n * @deprecated import and use `hopeTheme` instead\n */\nexport const config = (userConfig: Record<string, unknown>): UserConfig => {\n  checkMarkdownOptions(\n    userConfig[\"markdown\"] as\n      | (MarkdownOptions & Record<string, unknown>)\n      | undefined\n  );\n  checkBundlerOptions(userConfig);\n\n  userConfig[\"plugins\"] = checkPluginOptions(userConfig[\"plugins\"]);\n\n  // check renamed options\n  [\n    [\"ready\", \"onPrepared\"],\n    [\"updated\", \"onWatched\"],\n    [\"generated\", \"onGenerated\"],\n    [\"extendMarkdown\", \"extendsMarkdown\"],\n    [\"extendPageData\", \"extendsPage\"],\n    [\"patterns\", \"pagePatterns\"],\n    [\"templateSSR\", \"templateBuild\"],\n  ].forEach(([deprecatedOption, newOption]) => {\n    if (deprecatedOption in userConfig)\n      logger.warn(\n        `\"${deprecatedOption}\" option in config file is ${colors.yellow(\n          \"deprecated\"\n        )} in VuePress2, please use \"${newOption}\" instead.`\n      );\n\n    // eslint-disable-next-line\n    userConfig[newOption] = userConfig[deprecatedOption];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    delete userConfig[deprecatedOption];\n  });\n\n  // check removed options\n  [\n    [\"chainMarkdown\", 'please use \"extendsMarkdown\" instead'],\n    [\"extendsCli\"],\n    [\"configureWebpack\", 'please set options in \"bundler\" instead'],\n    [\"chainWebpack\", 'please set options in \"bundler\" instead'],\n    [\n      \"additionalPages\",\n      'please use \"app.pages.push(createPage())\" in \"onInitialized\" hook',\n    ],\n    [\n      \"clientDynamicModules\",\n      'please use \"app.writeTemp()\" in \"onPrepared\" hook',\n    ],\n    [\"clientAppRootComponentFiles\", 'please use \"clientConfigFile\" instead'],\n    [\"clientAppSetupFiles\", 'please use \"clientConfigFile\" instead'],\n    [\"clientAppEnhanceFiles\", 'please use \"clientConfigFile\" instead'],\n  ].forEach(([removedOption, hint = \"\"]) => {\n    if (removedOption in userConfig)\n      logger.error(\n        `\"${removedOption}\" option in config is ${colors.red(\n          \"no longer supported\"\n        )} in VuePress2${hint ? `, ${hint}.` : \".\"}`\n      );\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    delete userConfig[removedOption];\n  });\n\n  // other options\n  if (\"extraWatchFiles\" in userConfig) {\n    logger.error(\n      `${colors.magenta(\"extraWatchFiles\")} options is ${colors.red(\n        \"removed\"\n      )} in VuePress2, you should use \"onWatched\" hook.`\n    );\n\n    delete userConfig[\"extraWatchFiles\"];\n  }\n\n  return defineHopeConfig(userConfig);\n};\n","import { type App } from \"@vuepress/core\";\n\nimport { type ThemeStatus } from \"../../config/index.js\";\nimport { CLIENT_FOLDER } from \"../../utils.js\";\n\n/**\n * @private\n */\nexport const prepareConfigFile = (\n  app: App,\n  { enableBlog, enableEncrypt, enableSlide }: ThemeStatus\n): Promise<string> => {\n  const imports: string[] = [];\n  const enhances: string[] = [];\n  const setups: string[] = [];\n  const layouts = [];\n\n  if (enableBlog) {\n    imports.push(\n      `import BloggerInfo from \"@theme-hope/modules/blog/components/BloggerInfo\";`,\n      `import { setupBlog } from \"@theme-hope/modules/blog/composables/index\";`,\n      `import BlogCategory from \"${CLIENT_FOLDER}modules/blog/layouts/BlogCategory.js\";`,\n      `import BlogHome from \"${CLIENT_FOLDER}modules/blog/layouts/BlogHome.js\";`,\n      `import BlogType from \"${CLIENT_FOLDER}modules/blog/layouts/BlogType.js\";`,\n      `import Timeline from \"${CLIENT_FOLDER}modules/blog/layouts/Timeline.js\";`,\n      `import \"${CLIENT_FOLDER}modules/blog/styles/layout.scss\";`\n    );\n\n    enhances.push(`app.component(\"BloggerInfo\", BloggerInfo);`);\n\n    setups.push(\"setupBlog();\");\n\n    layouts.push(\"BlogCategory,\", \"BlogHome,\", \"BlogType,\", \"Timeline,\");\n  }\n\n  if (enableEncrypt) {\n    imports.push(\n      `import GlobalEncrypt from \"@theme-hope/modules/encrypt/components/GlobalEncrypt\";`,\n      `import LocalEncrypt from \"@theme-hope/modules/encrypt/components/LocalEncrypt\";`\n    );\n    enhances.push(\n      `app.component(\"GlobalEncrypt\", GlobalEncrypt);`,\n      `app.component(\"LocalEncrypt\", LocalEncrypt);`\n    );\n  }\n\n  if (enableSlide) {\n    imports.push(`import Slide from \"${CLIENT_FOLDER}layouts/Slide.js\";`);\n    layouts.push(\"Slide,\");\n  }\n\n  return app.writeTemp(\n    `theme-hope/config.js`,\n    `import { defineClientConfig } from \"@vuepress/client\";\n\nimport HopeIcon from \"@theme-hope/components/HopeIcon\";\nimport Layout from \"${CLIENT_FOLDER}layouts/Layout.js\";\nimport NotFound from \"${CLIENT_FOLDER}layouts/NotFound.js\";\n\nimport { useScrollPromise } from \"@theme-hope/composables/index\";\nimport { injectDarkmode, setupDarkmode } from \"@theme-hope/modules/outlook/composables/index\";\nimport { setupSidebarItems } from \"@theme-hope/modules/sidebar/composables/index\";\n\nimport \"${CLIENT_FOLDER}styles/index.scss\";\n\n${imports.join(\"\\n\")}\n\nexport default defineClientConfig({\n  enhance: ({ app, router }) => {\n    const { scrollBehavior } = router.options;\n\n    router.options.scrollBehavior = async (...args) => {\n      await useScrollPromise().wait();\n\n      return scrollBehavior(...args);\n    };\n\n    // inject global properties\n    injectDarkmode(app);\n\n    // render icon for auto-catalog\n    app.component(\"HopeIcon\", HopeIcon);\n\n${enhances.map((item) => `    ${item}`).join(\"\\n\")}\n  },\n  setup: () => {\n    setupDarkmode();\n    setupSidebarItems();\n${setups.map((item) => `    ${item}`).join(\"\\n\")}\n  },\n  layouts: {\n    Layout,\n    NotFound,\n${layouts.map((item) => `    ${item}`).join(\"\\n\")}\n  }\n});`\n  );\n};\n","import { type ThemeFunction } from \"@vuepress/core\";\nimport { isPlainObject } from \"@vuepress/shared\";\nimport { watch } from \"chokidar\";\n\nimport { getAlias } from \"./alias.js\";\nimport { extendsBundlerOptions } from \"./bundler.js\";\nimport { checkUserPlugin, vuePressVersionCheck } from \"./check/index.js\";\nimport { checkLegacyStyle, convertThemeOptions } from \"./compact/index.js\";\nimport {\n  checkSocialMediaIcons,\n  getStatus,\n  getThemeData,\n} from \"./config/index.js\";\nimport { addFavicon } from \"./init/index.js\";\nimport { getPluginConfig, usePlugin } from \"./plugins/index.js\";\nimport {\n  prepareConfigFile,\n  prepareHighLighterScss,\n  prepareSidebarData,\n  prepareSocialMediaIcons,\n  prepareThemeColorScss,\n} from \"./prepare/index.js\";\nimport { type HopeThemeBehaviorOptions } from \"./typings/index.js\";\nimport { TEMPLATE_FOLDER } from \"./utils.js\";\nimport { type ThemeOptions } from \"../shared/index.js\";\n\nexport const hopeTheme =\n  (\n    options: ThemeOptions,\n    // TODO: Change default value in v2 stable\n    behavior: HopeThemeBehaviorOptions | boolean = true\n  ): ThemeFunction =>\n  (app) => {\n    const behaviorOptions = isPlainObject(behavior)\n      ? behavior\n      : behavior\n      ? { compact: true, check: true }\n      : {};\n    const isDebug = behaviorOptions.debug ? (app.env.isDebug = true) : false;\n\n    const {\n      favicon,\n      hotReload = isDebug,\n      plugins = {},\n      hostname,\n      iconAssets,\n      iconPrefix,\n      backToTop,\n      sidebarSorter,\n      ...themeOptions\n    } = behaviorOptions.compact\n      ? convertThemeOptions(options as ThemeOptions & Record<string, unknown>)\n      : options;\n\n    if (behaviorOptions.compact) checkLegacyStyle(app);\n\n    vuePressVersionCheck(app);\n\n    const status = getStatus(app, options);\n    const themeData = getThemeData(app, themeOptions, status);\n    const icons = status.enableBlog ? checkSocialMediaIcons(themeData) : {};\n\n    usePlugin(app, themeData, plugins, hotReload, behaviorOptions);\n\n    if (isDebug) console.log(\"Theme plugin options:\", plugins);\n\n    return {\n      name: \"vuepress-theme-hope\",\n\n      alias: getAlias(isDebug),\n\n      define: () => ({\n        BLOG_TYPE_INFO: status.blogType,\n        ENABLE_BLOG: status.enableBlog,\n        ENABLE_READING_TIME: status.enableReadingTime,\n        HAS_MULTIPLE_LANGUAGES: status.hasMultipleLanguages,\n        SUPPORT_PAGEVIEW: status.supportPageview,\n      }),\n\n      extendsBundlerOptions,\n\n      onInitialized: (app): void => {\n        if (favicon) addFavicon(app, favicon);\n        if (behaviorOptions.check) checkUserPlugin(app);\n      },\n\n      onPrepared: (app): Promise<void> =>\n        Promise.all([\n          prepareSidebarData(app, themeData, sidebarSorter),\n          prepareHighLighterScss(app, plugins),\n          prepareThemeColorScss(app, themeData),\n          prepareSocialMediaIcons(app, icons),\n        ]).then(() => void 0),\n\n      onWatched: (app, watchers): void => {\n        if (hotReload) {\n          // this ensure the page is generated or updated\n          const structureSidebarWatcher = watch(\"pages/**/*.vue\", {\n            cwd: app.dir.temp(),\n            ignoreInitial: true,\n          });\n\n          structureSidebarWatcher.on(\"add\", () => {\n            void prepareSidebarData(app, themeData, sidebarSorter);\n          });\n          structureSidebarWatcher.on(\"change\", () => {\n            void prepareSidebarData(app, themeData, sidebarSorter);\n          });\n          structureSidebarWatcher.on(\"unlink\", () => {\n            void prepareSidebarData(app, themeData, sidebarSorter);\n          });\n\n          watchers.push(structureSidebarWatcher);\n        }\n      },\n\n      plugins: getPluginConfig(\n        app,\n        plugins,\n        themeData,\n\n        // @ts-ignore\n        {\n          backToTop,\n          hostname,\n          hotReload,\n          iconAssets,\n          iconPrefix,\n          favicon,\n        },\n        behaviorOptions.compact\n      ),\n\n      templateBuild: `${TEMPLATE_FOLDER}index.build.html`,\n\n      clientConfigFile: (app) => prepareConfigFile(app, status),\n    };\n  };\n"],"names":["getDirAlias","dir","fs","path","CLIENT_FOLDER","file","endsWith","getEntryAlias","entry","getAlias","isDebug","alias","fromEntries","item","folder","defineNavbarConfig","config","deprecatedMsg","defineSidebarConfig","defineSidebarArrayConfig","defineSidebarObjectConfig","defineThemeConfig","themeConfig","convertThemeOptions","defineHopeConfig","logger","colors","isPlainObject","hopeTheme","isFunction","navbarConfig","sidebarConfig","checkMarkdownOptions","options","checkPluginOptions","plugins","isArray","name","isString","deprecatedOption","newOption","removedOption","checkBundlerOptions","userConfig","hint","prepareConfigFile","app","enableBlog","enableEncrypt","enableSlide","imports","enhances","setups","layouts","behavior","behaviorOptions","favicon","hotReload","hostname","iconAssets","iconPrefix","backToTop","sidebarSorter","themeOptions","checkLegacyStyle","vuePressVersionCheck","status","getStatus","themeData","getThemeData","icons","checkSocialMediaIcons","usePlugin","extendsBundlerOptions","addFavicon","checkUserPlugin","prepareSidebarData","prepareHighLighterScss","prepareThemeColorScss","prepareSocialMediaIcons","watchers","structureSidebarWatcher","watch","getPluginConfig","TEMPLATE_FOLDER"],"mappings":"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"}